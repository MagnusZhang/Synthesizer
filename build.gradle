// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext{
        kotlin_version = '1.3.41' // version of kotlin
        rxJavaVersion = "2.2.6" // version for RxJava
        rxAndroid = "2.1.1" // version for RxAndroid
        daggerVersion = "2.24" // version for Dagger
        multidexVerion = "2.0.1" // version for Multidex
        retrofitVersion = "2.6.2" // version for Retrofit
        okhttpVersion = "4.2.0" // version for OkHttp
        gsonVersion = "2.8.5"  // version for Gson
        coroutineVersion = "1.3.1"// version for kotlin coroutine
        testRunnerVersion = "1.2.0" // version of unit test runner
        junitVersion = "4.12" // version of Junit
        appcompatVersion = "1.1.0" // version of appcompat
        ktxVersion = "1.1.0" // version of ktx
        espressoVersion = "3.2.0" // version of espresso
    }
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
    }
    // properties could be set this way:
    // gradlew assembleRelease -Pruntime=debug
    // runtimes [debug, test, release]
    if(hasProperty("runtime")){
        ext.runtime = it.property("runtime").toString()
    }else{
        ext.runtime = "debug"
    }
    afterEvaluate {
        def androidObj = project.extensions.findByName("android")
        if(androidObj != null){
            def defaultConfigObj =  androidObj["defaultConfig"]
            defaultConfigObj.buildConfigField('String','ProjectRuntime',"\"$runtime\"")
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

ext{
    compileSdkVersion = 29 //version for compiling sdk
    buildToolsVersion = "29.0.2" // version for build-tools
    minSdkVersion = 19 // version of min sdk, which covers 95% of devices
    targetSdkVersion = 29 // version of target sdk
    versionCode = 2 // version code
    versionName = "0.2.0" // version name
}